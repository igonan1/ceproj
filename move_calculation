//
//
//
//
//
//16...
//8,9,10,11,12,13,14,15,
//0,1,2,3,4,5,6,7, (1rank)
#include <stdio.h>
#include <stdbool.h>
#include <stdint.h>
#include <stdlib.h>
#define convert(x,y) x+8*y//x,y=0~7
struct bitboard{
    uint64_t pawn;
    uint64_t knight;
    uint64_t bishop;
    uint64_t rook;
    uint64_t queen;
    uint64_t king;
};
typedef struct bitboard board;
board white;
board black;
uint8_t popcnt(uint64_t n){
    int a=n;
    int depth=0;
    for(int i=0;a!=0;i++){
        a=a&(a-1);
        depth++;
    }
    return depth;
}
uint8_t location(uint64_t piece,uint8_t n){//location of nth bit
    int count=0;
    uint8_t table[64]={0};
    if((n>popcnt(piece))|(popcnt(piece)==0)){
        return 0;//invalid
    }
    for(int i=0;i<64;i++){
        if((piece>>i)&1){
            table[count]=i;
            count++;
        }
    }
    return table[n];
}
void legal_move_generator(uint64_t *table){
    table=(uint64_t*)malloc(1000*sizeof(uint64_t));
    int length=0;
}
int main{
    return 0;
}
